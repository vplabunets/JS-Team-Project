{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-5791823a4cd50e7d.js","src/index.js","src/js/createMainMarkup.js","node_modules/@parcel/runtime-js/lib/runtime-16e875404a67c5b6.js","src/js/pagination.js","src/js/preloader.js","src/js/inputCheck.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.4aa98e7e.js\\\",\\\"e5oy7\\\":\\\"filmWrap.dabdf2b2.jpg\\\",\\\"6IIJ4\\\":\\\"my-library.f1edd2f4.js\\\"}\"));","import './js/btn-anchor';\nimport './js/createMainMarkup';\nimport './js/pagination';\nimport './js/preloader';\nimport './js/inputCheck';\nimport './js/localstorageApp';\nimport './js/modal-film-info';\nimport './js/changeTheme';\nimport './js/modal-team';\nimport './js/modal-authorization';\n\nimport './js/library-main';\n\nimport './js/auth-firebase';\n","import { searchGenresById } from './genresList';\nimport ApiFilmoteka from './filmotekaApi';\nimport { renderFoo } from './renderMarkup';\nimport img from '../images/filmWrap.jpg';\nimport pagination from './pagination';\nconst api = new ApiFilmoteka();\nimport { cleanerMarkup } from './cleanerMarkup';\nimport { preloaderRefresh, preloaderRefreshOFF } from './preloader';\nimport { refs } from './refs';\nexport { api };\nrefs.paginationBox.addEventListener('click', handlerPagination);\n\nlet globalCurrentpage = 1;\n\n// —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤\nexport async function createMainMarkup(fetchData) {\n  const results = await fetchData;\n  console.log('results', results);\n  refs.fetchDataValue = results;\n  // –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –∏–∑ –µ–ª–µ–º–µ–Ω—Ç–æ–≤ 'li' , –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å—Ç—Ä–æ–∫—É —Å –ø–æ–º–æ—â—é join\n  const filmCards = results\n    .map(\n      ({\n        id,\n        poster_path,\n        title,\n        genre_ids,\n        release_date,\n      }) => `<li class=\"film__item\">\n        <a class=\"film__link\" id=\"${id}\">\n  <div class=\"film__wrap\">\n      <img src=${\n        poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : img\n      } class=\"film-item__img\" alt=\"${title}\" width=\"300\">\n  </div>\n  <div class=\"wrap__film>\n  <div class=\"film__title-wrap\">\n  <h3 class=\"film__title\">${title}</h3>\n  </div>\n  <div class=\"film__genres-and-date\">\n  <p class=\"film__genres\">${\n    searchGenresById(genre_ids) ? searchGenresById(genre_ids) : 'Unknown genre'\n  }</p>\n  <p class=\"film__release-date\">${\n    //–ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–∫\n    release_date ? new Date(release_date).getFullYear() : 'Nobody knows'\n  }</p>\n\n   </div>\n   </div>\n   </a>\n   </li>`\n    )\n    .join('');\n\n  // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–æ–∫—É\n  renderFoo(filmCards, refs.cardListEl);\n\n  await pagination(api.pageNumber, api.totalPages);\n  return filmCards;\n}\n// –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é render\ncreateMainMarkup(api.fetchPopularsFilms());\n\nasync function handlerPagination(evt) {\n  if (api.filmName) {\n    console.log('return');\n    return;\n  } else {\n    console.log('asd');\n    if (evt.target.nodeName !== 'LI') {\n      return;\n    }\n\n    if (evt.target.textContent === 'ü°∏') {\n      api.setPageNumber((globalCurrentpage -= 1));\n\n      const filesFromBackend = await api.fetchPopularsFilms();\n\n      cleanerMarkup(refs.cardListEl);\n      createMainMarkup(filesFromBackend);\n\n      pagination(api.pageNumber, api.totalPages);\n      preloaderRefreshOFF();\n      return;\n    }\n\n    if (evt.target.textContent === 'ü°∫') {\n      api.setPageNumber((globalCurrentpage += 1));\n\n      const filesFromBackend = await api.fetchPopularsFilms();\n\n      cleanerMarkup(refs.cardListEl);\n      createMainMarkup(filesFromBackend);\n\n      pagination(api.pageNumber, api.totalPages);\n      preloaderRefreshOFF();\n      return;\n    }\n\n    if (evt.target.id === 'left-pagnDots') {\n      api.setPageNumber((globalCurrentpage -= 3));\n\n      const filesFromBackend = await api.fetchPopularsFilms();\n\n      cleanerMarkup(refs.cardListEl);\n      createMainMarkup(filesFromBackend);\n\n      pagination(api.pageNumber, api.totalPages);\n      preloaderRefreshOFF();\n      return;\n    }\n\n    if (evt.target.id === 'right-pagnDots') {\n      api.setPageNumber((globalCurrentpage += 3));\n      const filesFromBackend = await api.fetchPopularsFilms();\n\n      cleanerMarkup(refs.cardListEl);\n      createMainMarkup(filesFromBackend);\n\n      pagination(api.pageNumber, api.totalPages);\n      preloaderRefreshOFF();\n      return;\n    }\n\n    const page = evt.target.textContent;\n\n    api.setPageNumber(Number(page));\n    const filesFromBackend = await api.fetchPopularsFilms();\n\n    cleanerMarkup(refs.cardListEl);\n    createMainMarkup(filesFromBackend);\n\n    pagination(api.pageNumber, api.totalPages);\n    preloaderRefreshOFF();\n  }\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"e5oy7\");","import { refs } from './refs';\nlet globalCurrentpage = 1;\n\nexport default function pagination(currentPage, allPages) {\n  globalCurrentpage = currentPage;\n  let markup = '';\n  let beforeTwoPage = currentPage - 2;\n  let beforePage = currentPage - 1;\n  let afterPage = currentPage + 1;\n  let afterTwoPage = currentPage + 2;\n  if (currentPage > 1) {\n    markup += `<li class=\"paginationRow\">&#129144;</li>`;\n  }\n  if (currentPage > 1) {\n    markup += `<li>1</li>`;\n  }\n\n  if (currentPage > 4) {\n    markup += `<li id=\"left-pagnDots\">...</li>`;\n  }\n  if (currentPage > 3) {\n    markup += `<li>${beforeTwoPage}</li>`;\n  }\n  if (currentPage > 2) {\n    markup += `<li>${beforePage}</li>`;\n  }\n  markup += `<li class=\"paginationPage--current\">${currentPage}</li>`;\n  if (allPages - 1 > currentPage) {\n    markup += `<li>${afterPage}</li>`;\n  }\n  if (allPages - 2 > currentPage) {\n    markup += `<li>${afterTwoPage}</li>`;\n  }\n  if (allPages - 3 > currentPage) {\n    markup += `<li id=\"right-pagnDots\">...</li>`;\n  }\n  if (allPages > currentPage) {\n    markup += `<li>${currentPage + 5}</li>`;\n    markup += `<li class=\"paginationRow\">&#129146;</li>`;\n  }\n\n  refs.paginationBox.innerHTML = markup;\n}\n","import { refs } from './refs';\n\nexport function preloaderRefresh() {\n  refs.bodyEl.classList.add('no-scroll');\n  refs.preloaderEl.classList.remove('preloader--hide');\n  setTimeout(() => {\n    refs.bodyEl.scrollIntoView({ top: 0, behavior: 'smooth' });\n  }, 100);\n  console.log('–ó–ê–ü–£–°–ö –ü–†–ï–õ–û–£–î–ï–†–ê');\n}\n\nexport function preloaderRefreshOFF() {\n  \n  const arrElements = Array.from(refs.imgElArr);\n  // console.log(arrElements);\n\n  if (arrElements.length === 0) {\n    refs.preloaderEl.classList.add('preloader--hide');\n    refs.bodyEl.classList.remove('no-scroll');\n  }\n\n  arrElements.forEach((el, index) => {\n    el.onload = () => {\n      if (index === arrElements.length - 1) {\n        refs.preloaderEl.classList.add('preloader--hide');\n        refs.bodyEl.classList.remove('no-scroll');\n        console.log('–í–´–ö–õ –ü–†–ï–õ–û–£–î–ï–†–ê');\n      }\n      // console.log(\"–º—ã –º–æ–ª–æ–¥—Ü—ã\")\n    };\n  });\n}\n\nfunction preloaderOn() {\n  refs.bodyEl.classList.add('no-scroll');\n  refs.preloaderEl.classList.remove('preloader--hide');\n  window.addEventListener('load', onLoad);\n}\n\nfunction onLoad(e) {\n  refs.preloaderEl.classList.add('preloader--hide');\n  refs.bodyEl.classList.remove('no-scroll');\n  window.removeEventListener('load', onLoad);\n  // console.log('C window —Å–ª—É—à–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç');\n}\n\npreloaderOn();\n\n// export class Preloader {\n\n//   constructor() {\n//     this.preloaderEl = document.querySelector('.preloader');\n\n//   }\n\n//   preloaderOn() {\n//    window.addEventListener('load', this.onLoad);\n//   }\n\n//   onLoad(e) {\n//     console.log(this.preloaderEl.classList);\n//     this.preloaderEl.classList.add('preloader--hide');\n//     // window.removeEventListener('load', onLoad);\n//     // console.log('C window —Å–ª—É—à–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç');\n//   }\n\n// }\n\n// const preloaderApp = new Preloader();\n// console.log(preloaderApp);\n// preloaderApp.preloaderOn()\n\n//  class Preloader {\n\n//   constructor() {\n//     this.preloderEl = document.querySelector('#preloader');\n//     this.precentsEl = document.querySelector('#precents');\n//     this.dataLength = 20;\n//     this.counter = 0;\n// }\n\n//   showPreloader() {\n//     this.preloderEl.classList.remove('preloader--hide')\n//   }\n//   hidePreloader() {\n//     this.preloderEl.classList.add('preloader--hide')\n//   }\n//   setCounter(dataLength) {\n//     this.dataLength = dataLength;\n//     console.log(dataLength)\n//   }\n//    precentsLoader() {\n//      let inc = 100 / this.dataLength;\n\n//      let timerId = setInterval(() => {\n//        this.counter++\n//        this.precentsEl.innerHTML = ((this.counter * 100) / this.dataLength).toFixed();\n\n//        if (this.counter === this.dataLength) {\n//          clearInterval(timerId);\n//          this.hidePreloader();\n//        }\n//      }, 100)\n\n//   }\n\n// }\n\n// window.addEventListener('load', (e) => {\n//   // console.log(\"—Å—Ç—Ä–∞–Ω–∏—á–∫–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å\");\n//   // const mediaFiles = document.querySelectorAll('img');\n//   // console.log(mediaFiles.length);\n//   // preloader.dataLength = mediaFiles.length;\n//   preloader.precentsLoader()\n\n// })\n\n// export function prelouderOn() {\n//   window.addEventListener('DOMContentLoaded', loader);\n// }\n\n// function loader(e) {\n\n//   setTimeout(() => {\n//     const preloaderRef = document.querySelector('.preloader');\n//     const precentsRef = document.querySelector('#precents');\n\n//     console.log(precentsRef);\n//     const mediaFiles = document.querySelectorAll('film-item__img');\n//     let i = 0;\n//     // console.log(e)\n//     console.log(mediaFiles);\n\n//     Array.from(mediaFiles).forEach((el, index) => {\n//       el.onload = () => {\n//         i++\n\n//         precentsRef.innerHTML = ((i * 100) / mediaFiles.length).toFixed();\n\n//         if (i === mediaFiles.length) {\n//           precentsRef.innerHTML = 100;\n//           preloaderRef.classList.add('preloader--hide');\n\n//           window.removeEventListener('DOMContentLoaded', loader);\n//           // console.log(\"C–ª—É—à–∞—Ç–µ–ª—å DOMContentLoaded c window —Å–Ω—è—Ç!\");\n//         }\n//       }\n\n//     })\n//   },200)\n\n// }\n\n// prelouderOn()\n","// Import\n// import ApiFilmoteka from './filmotekaApi';\nimport img from '../images/filmWrap.jpg';\nimport { cleanerMarkup } from './cleanerMarkup';\nimport { searchGenresById } from './genresList';\nimport { renderFoo } from './renderMarkup';\nimport { refs } from './refs';\nimport { preloaderRefresh, preloaderRefreshOFF } from './preloader';\nimport { api } from './createMainMarkup';\nimport pagination from './pagination';\n\nlet globalCurrentpage = 1;\n\n// const api = new ApiFilmoteka();\n\nrefs.headerFormEl.addEventListener('submit', onFormSubmit);\nrefs.paginationBox.addEventListener('click', handlerPaginationInput);\n\nasync function onFormSubmit(event) {\n  event.preventDefault();\n  api.setPageNumber(1);\n  let query = event.target.elements[0].value.trim();\n  refs.expFilmName = query;\n\n  //Checking for query existance\n  if (query) {\n    preloaderRefresh();\n\n    //Cleaning markup\n    cleanerMarkup(refs.cardListEl);\n    //Setting querry to api of ApiFilmoteka\n    api.setFilmName(query);\n    createMainMarkup(api.fetchFilmsByName());\n    refs.headerFormEl.reset();\n  } else {\n    //Running error message function\n    errorMessage();\n    return;\n  }\n}\n\nasync function createMainMarkup(fetchedData) {\n  //Getting results from API\n  const results = await fetchedData;\n  refs.fetchDataValue = results;\n  //Chegking response from API\n  if (!results.length) {\n    await errorMessage();\n  } else {\n    refs.headerErrorEl.classList.add('visually-hidden');\n    // –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –∏–∑ –µ–ª–µ–º–µ–Ω—Ç–æ–≤ 'li' , –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ —Å—Ç—Ä–æ–∫—É —Å –ø–æ–º–æ—â—é join\n    const filmCards = results\n      .map(\n        ({\n          id,\n          poster_path,\n          title,\n          genre_ids,\n          release_date,\n        }) => `<li class=\"film__item\"><div class=\"test\">\n        <a class=\"film__link\" id=\"${id}\">\n  <div class=\"film__wrap\">\n  <img src=${\n    poster_path ? `https://image.tmdb.org/t/p/original${poster_path}` : img\n  } class=\"film-item__img\" alt=\"${title}\" width=\"300\">\n  </div>\n  <div class= \"film__info\">\n  <div class=\"film__title-wrap\">\n  <h3 class=\"film__title\">${title}</h3>\n  </div>\n  <div class=\"film__genres-and-date\">\n  <p class=\"film__genres\">${\n    searchGenresById(genre_ids) ? searchGenresById(genre_ids) : 'Unknown genre'\n  }</p>\n  <p class=\"film__release-date\">${\n    release_date ? new Date(release_date).getFullYear() : 'Nobody knows'\n  }</p>\n  </div>\n  \n   </div>\n   </div>\n   </a>\n   </li>`\n      )\n      .join('');\n    // Running render function\n    renderFoo(filmCards, refs.cardListEl);\n    preloaderRefreshOFF();\n    pagination(api.pageNumber, api.totalPages);\n    return filmCards;\n  }\n}\n\nfunction errorMessage() {\n  preloaderRefreshOFF();\n  //Making message visible\n  refs.headerErrorEl.classList.remove('visually-hidden');\n  //Form element cleaning\n  refs.headerFormEl.reset();\n  cleanerMarkup(refs.paginationBox);\n}\n\nasync function handlerPaginationInput(evt) {\n  if (!api.getFilmName()) {\n    return;\n  } else {\n    if (evt.target.nodeName !== 'LI') {\n      return;\n    }\n    if (evt.target.textContent === 'ü°∏') {\n      api.setPageNumber((globalCurrentpage -= 1));\n      api.getFilmName();\n\n      const filesFromBackend = await api.fetchFilmsByName();\n\n      cleanerMarkup(refs.cardListEl);\n      createMainMarkup(filesFromBackend);\n\n      pagination(api.pageNumber, api.totalPages);\n      preloaderRefreshOFF();\n      return;\n    }\n    if (evt.target.textContent === 'ü°∫') {\n      api.setPageNumber((globalCurrentpage += 1));\n      api.getFilmName();\n      const filesFromBackend = await api.fetchFilmsByName();\n\n      cleanerMarkup(refs.cardListEl);\n      createMainMarkup(filesFromBackend);\n\n      pagination(api.pageNumber, api.totalPages);\n      preloaderRefreshOFF();\n      return;\n    }\n    if (evt.target.id === 'left-pagnDots') {\n      api.setPageNumber((globalCurrentpage -= 3));\n\n      api.getFilmName();\n      const filesFromBackend = await api.fetchFilmsByName();\n\n      cleanerMarkup(refs.cardListEl);\n      createMainMarkup(filesFromBackend);\n      preloaderRefreshOFF();\n      pagination(api.pageNumber, api.totalPages);\n\n      return;\n    }\n\n    if (evt.target.id === 'right-pagnDots') {\n      api.setPageNumber((globalCurrentpage += 3));\n      api.getFilmName();\n      const filesFromBackend = await api.fetchFilmsByName();\n\n      cleanerMarkup(refs.cardListEl);\n      createMainMarkup(filesFromBackend);\n      preloaderRefreshOFF();\n      pagination(api.pageNumber, api.totalPages);\n\n      return;\n    }\n    const page = evt.target.textContent;\n\n    api.setPageNumber(Number(page));\n    const filesFromBackend = await api.fetchFilmsByName();\n\n    cleanerMarkup(refs.cardListEl);\n    createMainMarkup(filesFromBackend);\n\n    pagination(api.pageNumber, api.totalPages);\n    preloaderRefreshOFF();\n  }\n}\n"],"names":["parcelRequire","register","JSON","parse","$bpxeT","$7bed28710f1e14ae$exports","getBundleURL","resolve","$4Nugj","$dfaf77c789ce7a24$export$2e2bcd8739ae039","currentPage","allPages","markup","beforePage","afterPage","afterTwoPage","concat","refs","paginationBox","innerHTML","$33eb4b645ec64397$export$7c53ee41a616369d","bodyEl","classList","add","preloaderEl","remove","setTimeout","scrollIntoView","top","behavior","console","log","$33eb4b645ec64397$export$f738f829ee269bf","arrElements","Array","from","imgElArr","length","forEach","el","index","onload","$33eb4b645ec64397$var$onLoad","e","window","removeEventListener","addEventListener","$0473af8e59c09f08$export$644d8ea042df96a6","$lmjT0","default","evt","$0473af8e59c09f08$var$_handlerPagination","apply","this","arguments","$0473af8e59c09f08$var$globalCurrentpage","$0473af8e59c09f08$export$dda24948a95963","fetchData","$0473af8e59c09f08$var$_createMainMarkup","$parcel$interopDefault","$2TvXO","mark","_callee","results","filmCards","_ctx","sent","fetchDataValue","map","param","id","poster_path","title","genre_ids","release_date","$awCm4","searchGenresById","Date","getFullYear","join","$5118m","renderFoo","cardListEl","pageNumber","totalPages","filesFromBackend","filesFromBackend1","filesFromBackend2","filesFromBackend3","page","filesFromBackend4","filmName","target","nodeName","textContent","setPageNumber","fetchPopularsFilms","$6jzso","cleanerMarkup","Number","$a807e92c84e6f622$var$globalCurrentpage","$a807e92c84e6f622$var$_onFormSubmit","event","query","preventDefault","elements","value","trim","expFilmName","setFilmName","$a807e92c84e6f622$var$createMainMarkup","fetchFilmsByName","headerFormEl","reset","$a807e92c84e6f622$var$errorMessage","fetchedData","$a807e92c84e6f622$var$_createMainMarkup","headerErrorEl","$a807e92c84e6f622$var$_handlerPaginationInput","getFilmName"],"version":3,"file":"index.4aa98e7e.js.map"}